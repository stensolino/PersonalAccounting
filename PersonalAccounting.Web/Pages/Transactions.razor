@using System.Linq;

@page "/transactions/{id}"

@inject ITransactionsService  transactionsService
@inject ICategoriesService  categoriesService

<div class="row">
    <div class="col-sm-12">
        <h3>Transactions</h3>
        <div class="mt-4">

        </div>
    </div>
    @if (_transactions is null)
    {
        // TODO Implement Error handling

        if (_loading)
        {
            <Loading />
        }
    }
    else
    {
        <div class="col-sm-8">
            <table class="table table-sm table-hover">
                <thead>
                    <tr>
                        <th scope="col">Date</th>
                        <th scope="col">Category Name</th>
                        <th scope="col">Note</th>
                        <th scope="col">Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var transaction in _transactions)
                    {
                        <tr>
                            <td>@transaction.Date</td>
                            <td>@transaction.CategoryName</td>
                            <td>@transaction.Note</td>
                            <td>@transaction.Amount KM</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="col-sm-4">
            <AddTransaction Categories="@_categories" BudgetId="@_budgetId" ReloadParent="LoadTransactions" />
            <br />
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Total Amount by Category</h5>
                    <ul class="list-group list-group-flush mt-4">
                        @foreach (var category in _groupByCategory)
                        {
                        <li class="list-group-item">
                            <span class="text-left">@category.FirstOrDefault()?.CategoryName : </span>
                            <span class="text-right">@category.Sum(s => s.Amount) KM</span>
                        </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public string Id { get; set; }
    private int _budgetId;
    private bool _loading = false;
    private List<CategoryDto> _categories;
    private List<TransactionDto> _transactions;
    private IEnumerable<IGrouping<long, TransactionDto>> _groupByCategory;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;

        int.TryParse(Id, out _budgetId);

        _categories = await categoriesService.GetCategoriesByBudgetId(_budgetId);
        await LoadTransactions();

        _loading = false;
    }

    async Task LoadTransactions()
    {
        _transactions = await transactionsService.GetTransactionsByBudgetId(_budgetId);
        _groupByCategory = _transactions?.GroupBy(g => g.CategoryId);
    }
}
